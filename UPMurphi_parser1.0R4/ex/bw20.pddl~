(define (domain blocks)
(:requirements :strips :typing)
(:types block)
(:predicates (on ?x - block ?y - block) (ontable ?x - block) (isclear ?x - block) (handempty) (holding ?x - block) )
(:functions (fun))


(:action pick-up
  :parameters (?x - block)
  :precondition (and (isclear ?x) (ontable ?x) (handempty))
  :effect (and (not (ontable ?x))
          (not (isclear ?x))
          (not (handempty))
          (holding ?x)))

(:action put-down
  :parameters (?x - block)
  :precondition (holding ?x)
  :effect (and (not (holding ?x))
          (isclear ?x)
          (handempty)
         (ontable ?x)))

(:action stack
  :parameters (?x - block ?y - block)
  :precondition (and (holding ?x) (isclear ?y))
  :effect (and (not (holding ?x))
          (not (isclear ?y))
          (isclear ?x)
          (handempty)
          (on ?x ?y)))

(:action unstack
  :parameters (?x - block ?y - block)
  :precondition (and (on ?x ?y) (isclear ?x) (handempty))
  :effect (and (holding ?x)
          (isclear ?y)
          (not (isclear ?x))
          (not (handempty))
          (not (on ?x ?y)))) 
)


(define (problem BW-rand-20)
(:domain blocks)
(:objects b1 b2 b3 b4 b5 b6 b7 b8 b9 b10 b11 b12 b13 b14 b15 b16 b17 b18 b19 b20  - block)
(:init
(handempty)
(on b1 b2)
(on b2 b5)
(on b3 b15)
(on b4 b14)
(on b5 b12)
(on b6 b8)
(on b7 b3)
(ontable b8)
(on b9 b7)
(ontable b10)
(on b11 b1)
(on b12 b17)
(on b13 b20)
(on b14 b9)
(on b15 b18)
(on b16 b6)
(ontable b17)
(on b18 b10)
(on b19 b16)
(ontable b20)
(isclear b4)
(isclear b11)
(isclear b13)
(isclear b19)
)
(:goal
(and
(on b1 b16)
(on b3 b17)
(on b4 b11)
(on b5 b3)
(on b6 b14)
(on b7 b5)
(on b8 b1)
(on b10 b12)
(on b11 b15)
(on b12 b18)
(on b13 b6)
(on b14 b10)
(on b15 b20)
(on b16 b9)
(on b17 b19)
(on b20 b2))
)
)

