
======================================================

UPMurphi Release 2.0.b4
Universal Planner for Discrete Time Hybrid Systems

Copyright (C) 2007 - 2010
G. Della Penna, B. Intrigila, D. Magazzeni, F. Mercorio

Call with the -c flag or read the license file for terms
and conditions of use.
Run this program with "-h" for the list of options.
Send bugs and comments to giuseppe.dellapenna@univaq.it

======================================================

======================================================

Model: math
* the state size is 44 bits (rounded up to 8 bytes).

======================================================
First state is at 0xf7363008

=== Analyzing model... ===============================

* State Space Expansion Algorithm: breadth first search.
  with symmetry algorithm 3 -- Heuristic Small Memory Normalization
  with permutation trial limit 10.
* Maximum size of the state space: 754717 states.
  with states hash-compressed to 40 bits.


==========================================================================
Verbose option selected.  The following is the detailed progress.

Firing startstate start
Obtained state:
x: 0
h_n: 20
g_n: 0
f_n: 20

Getting from state array index -1
+++++++++++++++++++++++++++++
TAIL: State 0 [37735]:
x: 0
h_n: 20
g_n: 0
f_n: 20
0
++++++++++++++++++++++++++++
------------------------------
Unpacking state from queue:
x: 0
h_n: 20
g_n: 0
f_n: 20

The following next states are obtained:

Firing rule  dec_5 
Obtained state:
x: -5
h_n: 25
g_n: 1
f_n: 26

Getting from state array index 37735
+++++++++++++++++++++++++++++
TAIL: State 0 [0]:
x: -5
h_n: 25
g_n: 1
f_n: 26
0
++++++++++++++++++++++++++++
Firing rule  dec_1 
Obtained state:
x: -1
h_n: 21
g_n: 1
f_n: 22

Getting from state array index 37735
+++++++++++++++++++++++++++++
TAIL: State 0 [0]:
x: -1
h_n: 21
g_n: 1
f_n: 22
1
TAIL: State 1 [1]:
x: -5
h_n: 25
g_n: 1
f_n: 26
1
++++++++++++++++++++++++++++
Firing rule  add_10 
Obtained state:
x: 10
h_n: 10
g_n: 1
f_n: 11

Getting from state array index 37735
+++++++++++++++++++++++++++++
TAIL: State 0 [0]:
x: 10
h_n: 10
g_n: 1
f_n: 11
2
TAIL: State 1 [1]:
x: -1
h_n: 21
g_n: 1
f_n: 22
2
TAIL: State 2 [2]:
x: -5
h_n: 25
g_n: 1
f_n: 26
2
++++++++++++++++++++++++++++
Firing rule  add_5 
Obtained state:
x: 5
h_n: 15
g_n: 1
f_n: 16

Getting from state array index 37735
+++++++++++++++++++++++++++++
TAIL: State 0 [0]:
x: 10
h_n: 10
g_n: 1
f_n: 11
4
TAIL: State 1 [1]:
x: 5
h_n: 15
g_n: 1
f_n: 16
4
TAIL: State 2 [2]:
x: -1
h_n: 21
g_n: 1
f_n: 22
4
TAIL: State 3 [3]:
x: -5
h_n: 25
g_n: 1
f_n: 26
4
++++++++++++++++++++++++++++
Firing rule  add_1 
Obtained state:
x: 1
h_n: 19
g_n: 1
f_n: 20

Getting from state array index 37735
+++++++++++++++++++++++++++++
TAIL: State 0 [0]:
x: 10
h_n: 10
g_n: 1
f_n: 11
4
TAIL: State 1 [1]:
x: 5
h_n: 15
g_n: 1
f_n: 16
4
TAIL: State 2 [2]:
x: 1
h_n: 19
g_n: 1
f_n: 20
4
TAIL: State 3 [3]:
x: -1
h_n: 21
g_n: 1
f_n: 22
4
TAIL: State 4 [4]:
x: -5
h_n: 25
g_n: 1
f_n: 26
4
++++++++++++++++++++++++++++
------------------------------
Unpacking state from queue:
x: 10
h_n: 10
g_n: 1
f_n: 11

The following next states are obtained:

Firing rule  dec_5 
Obtained state:
x: 5
h_n: 15
g_n: 2
f_n: 17

Getting from state array index 4
+++++++++++++++++++++++++++++
HEAD: State 0 [1]:
x: 5
h_n: 15
g_n: 1
f_n: 16
5
HEAD: State 1 [2]:
x: 5
h_n: 15
g_n: 2
f_n: 17
5
HEAD: State 2 [3]:
x: 1
h_n: 19
g_n: 1
f_n: 20
5
HEAD: State 3 [4]:
x: -1
h_n: 21
g_n: 1
f_n: 22
5
HEAD: State 4 [5]:
x: -5
h_n: 25
g_n: 1
f_n: 26
5
++++++++++++++++++++++++++++
Firing rule  dec_1 
Obtained state:
x: 9
h_n: 11
g_n: 2
f_n: 13

Getting from state array index 5
+++++++++++++++++++++++++++++
HEAD: State 0 [1]:
x: 9
h_n: 11
g_n: 2
f_n: 13
5
HEAD: State 1 [2]:
x: 5
h_n: 15
g_n: 1
f_n: 16
5
HEAD: State 2 [3]:
x: 5
h_n: 15
g_n: 2
f_n: 17
5
HEAD: State 3 [4]:
x: 1
h_n: 19
g_n: 1
f_n: 20
5
HEAD: State 4 [5]:
x: -1
h_n: 21
g_n: 1
f_n: 22
5
HEAD: State 5 [6]:
x: -5
h_n: 25
g_n: 1
f_n: 26
5
++++++++++++++++++++++++++++
Firing rule  add_10 
Obtained state:
x: 20
h_n: 0
g_n: 2
f_n: 2

Firing rule  add_5 
Obtained state:
x: 15
h_n: 5
g_n: 2
f_n: 7

Getting from state array index 6
+++++++++++++++++++++++++++++
HEAD: State 0 [1]:
x: 15
h_n: 5
g_n: 2
f_n: 7
5
HEAD: State 1 [2]:
x: 9
h_n: 11
g_n: 2
f_n: 13
5
HEAD: State 2 [3]:
x: 5
h_n: 15
g_n: 1
f_n: 16
5
HEAD: State 3 [4]:
x: 5
h_n: 15
g_n: 2
f_n: 17
5
HEAD: State 4 [5]:
x: 1
h_n: 19
g_n: 1
f_n: 20
5
HEAD: State 5 [6]:
x: -1
h_n: 21
g_n: 1
f_n: 22
5
HEAD: State 6 [7]:
x: -5
h_n: 25
g_n: 1
f_n: 26
5
++++++++++++++++++++++++++++
Firing rule  add_1 
Obtained state:
x: 11
h_n: 9
g_n: 2
f_n: 11

Getting from state array index 7
+++++++++++++++++++++++++++++
HEAD: State 0 [1]:
x: 15
h_n: 5
g_n: 2
f_n: 7
5
HEAD: State 1 [2]:
x: 11
h_n: 9
g_n: 2
f_n: 11
5
HEAD: State 2 [3]:
x: 9
h_n: 11
g_n: 2
f_n: 13
5
HEAD: State 3 [4]:
x: 5
h_n: 15
g_n: 1
f_n: 16
5
HEAD: State 4 [5]:
x: 5
h_n: 15
g_n: 2
f_n: 17
5
HEAD: State 5 [6]:
x: 1
h_n: 19
g_n: 1
f_n: 20
5
HEAD: State 6 [7]:
x: -1
h_n: 21
g_n: 1
f_n: 22
5
HEAD: State 7 [8]:
x: -5
h_n: 25
g_n: 1
f_n: 26
5
++++++++++++++++++++++++++++

======================================================

Model exploration complete (in 0.10 seconds).
	10 rules fired
	1 start states
	11 reachable states
	1 goals found


=== Building model dynamics... =======================

* Transition Graph mode: Memory Image
* Maximum size of graph: 833333 transitions.


======================================================

Model dynamics rebuilding complete (in 0.10 seconds).
	11 states
	10 transitions
	out degree: min 0 max 1 avg 0.91


=== Finding control paths... =========================

* Search Algorithm: Feasible Plan.


======================================================

Control paths calculation complete (in 0.10 seconds).
	11 states
	2 controllable


=== Collecting plans... ==============================


======================================================

Plan(s) generation complete (in 0.10 seconds).
	1 plans
	plan length (actions): min 2 max 2 avg 2.00
	plan duration (time): min 0 max 0 avg 0.00
	plan weight: min 0 max 0 avg 0.00


=== Writing final results... =========================

* Output format: PDDL+
* Output target: stdout.

; --Plan #00001--------------------------
; ---------------------------------------
(000)  add_10  [000]
(000)  add_10  [000]
; ---------------------------------------
; --Plan duration: 0000, weight: 0000----
; ---------------------------------------


======================================================

Results Written (in 0.10 seconds).


